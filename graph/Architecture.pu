@startuml Architecture
skinparam {
    monochrome true
    padding 1
}

class Poly{
    + Point[] verts
    + Point origin
    + Point[] getVertsWorld(void)
}

class Camera{
    + Point Postion
    + Matrix Rotation
    + Number FOV
    + Matrix projectToScreen(Matrix)
}

class World{
    + Camera ICamera
    + Poly[] Polys
    + MultiPoly[] MultiPolys
    + Number[][x,y] getScreenLocations(Poly)
}

class Point{
    + Matrix 4x1
    頂点として4x1の行列を使う
}

class Matrix{
    + Number row
    + Number col
    + constructor(row,col)
    + set(Number[])
    + getElement(i,j)
    + setElement(i,j)
    + getByIndex(index)
    + setByIndex(index,value)
    __Static method__
    {static} - Matrix log(Matrix)
    {static} -Matrix makeNorm(vec)
    {static} -Matrix makeTranslation(x,y,z)
    {static} -Matrix add(Matrix,Matrix)
    {static} -Matrix Invert(Matrix)
    {static} -Matrix multiply(multiplier: Matrix, target: Matrix)
    {static} -Matrix makeInverse(mx:Matrix)
    {static} -Matrix dot(vec1: Matrix(4,1), vec2: Matrix(4,1))
}

class Drawer{
    + Drawer(app, currentDoc, constants)
    + void Draw(DrawObject)
}

class DrawObject{
    + DrawObjectElement[]
}
class DrawObjectElement{
}
class MultiPoly{
}

MultiPoly *-Poly
World *-- MultiPoly
World *-- Camera
World *--Poly
Point -|> Matrix
Poly *--Point
DrawObject *-- DrawObjectElement
DrawObjectElement <- World
Drawer <- DrawObject
@enduml